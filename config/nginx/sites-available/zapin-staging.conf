# Nginx Configuration for Zapin WhatsApp SaaS - Staging Environment

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name staging.zapin.app;
    
    # SSL certificates
    ssl_certificate /etc/ssl/certs/staging.zapin.app.crt;
    ssl_certificate_key /etc/ssl/private/staging.zapin.app.key;
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Staging-specific CSP (more relaxed for testing)
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; connect-src 'self' wss: https:;" always;
    
    # Add staging identifier header
    add_header X-Environment "staging" always;
    
    # Logging
    access_log /var/log/nginx/staging.zapin.app.access.log main;
    error_log /var/log/nginx/staging.zapin.app.error.log;
    
    # Rate limiting (more lenient for staging)
    limit_req zone=api burst=100 nodelay;
    limit_conn conn_limit_per_ip 50;
    
    # Root directory
    root /var/www/zapin-staging/public;
    index index.html;
    
    # Upstream for staging
    upstream zapin_staging_app {
        server 127.0.0.1:3010 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream zapin_staging_api {
        server 127.0.0.1:3011 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # Static files
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt)$ {
        expires 1h;
        add_header Cache-Control "public";
        access_log off;
    }
    
    # API routes
    location /api/ {
        proxy_pass http://zapin_staging_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "staging";
        
        # Staging-specific timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # No caching in staging
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # WebSocket support
    location /ws {
        proxy_pass http://zapin_staging_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }
    
    # Health check
    location /health {
        proxy_pass http://zapin_staging_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Allow access from anywhere in staging
        access_log off;
    }
    
    # Main application
    location / {
        try_files $uri $uri/ @app;
    }
    
    location @app {
        proxy_pass http://zapin_staging_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "staging";
        proxy_cache_bypass $http_upgrade;
    }
    
    # Block sensitive files
    location ~ /\. {
        deny all;
        access_log off;
    }
}

# API subdomain for staging
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api-staging.zapin.app;
    
    # SSL certificates
    ssl_certificate /etc/ssl/certs/api-staging.zapin.app.crt;
    ssl_certificate_key /etc/ssl/private/api-staging.zapin.app.key;
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Environment "staging" always;
    
    # CORS headers (more permissive for staging)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials "true" always;
    
    # Logging
    access_log /var/log/nginx/api-staging.zapin.app.access.log main;
    error_log /var/log/nginx/api-staging.zapin.app.error.log;
    
    # Rate limiting
    limit_req zone=api burst=200 nodelay;
    limit_conn conn_limit_per_ip 100;
    
    # Handle all requests
    location / {
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        proxy_pass http://zapin_staging_api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "staging";
        
        # Longer timeouts for staging/testing
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }
}

# HTTP to HTTPS redirect for staging
server {
    listen 80;
    listen [::]:80;
    server_name staging.zapin.app api-staging.zapin.app;
    
    return 301 https://$server_name$request_uri;
}